// <auto-generated />
using System;
using Assesment3.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assesment3.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230221095342_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assesment3.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1989, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bruce Herbert"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1989, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "By Svetlin Nakov"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1969, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Josef Miller-Brockmann"
                        });
                });

            modelBuilder.Entity("Assesment3.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YearOfRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Book", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 6,
                            Subtitle = "",
                            Title = "C# (C Sharp Programming) : a Step by Step Guide for Beginners",
                            YearOfRelease = new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            CategoryId = 8,
                            Subtitle = "",
                            Title = "Dive into Neural Networks Using C Sharp",
                            YearOfRelease = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            CategoryId = 7,
                            Subtitle = "The Bulgarian C# Book",
                            Title = "Grid Systems in Graphic Design",
                            YearOfRelease = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Assesment3.Entities.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookCategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Literature",
                            ParentCategoryId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poetry",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Humour and satire",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fantasy",
                            ParentCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Information Tech",
                            ParentCategoryId = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Computer Programming",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Graphics and Designs",
                            ParentCategoryId = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Machine Learning",
                            ParentCategoryId = 5
                        });
                });

            modelBuilder.Entity("Assesment3.Entities.Book", b =>
                {
                    b.HasOne("Assesment3.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assesment3.Entities.BookCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
